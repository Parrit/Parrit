plugins {
    id "java"
    id "org.springframework.boot" version "2.4.4"
    id "io.spring.dependency-management" version "1.0.11.RELEASE"
    id "org.flywaydb.flyway" version "6.3.1"
}

repositories {
    mavenCentral()
}

bootJar {
    archiveFileName = "parrit-app.jar"
}

dependencies {
    ext.commonsLang3Version = "3.9"

    implementation "org.springframework.boot:spring-boot-starter-web"
    implementation "org.springframework.boot:spring-boot-starter-security"
    implementation "org.springframework.boot:spring-boot-starter-thymeleaf"
    implementation "org.springframework.boot:spring-boot-starter-data-jpa"
    implementation "org.springframework.boot:spring-boot-starter-validation"
    implementation "org.springframework.boot:spring-boot-devtools"
    implementation "org.apache.commons:commons-lang3:$commonsLang3Version"
    implementation 'org.flywaydb:flyway-core'

    runtimeOnly "org.postgresql:postgresql"

    compileOnly 'org.projectlombok:lombok:1.18.16'
    annotationProcessor 'org.projectlombok:lombok:1.18.16'

    testCompileOnly 'org.projectlombok:lombok:1.18.16'
    testAnnotationProcessor 'org.projectlombok:lombok:1.18.16'

    testImplementation "org.springframework.boot:spring-boot-starter-test"
    testImplementation "org.springframework.security:spring-security-test"

    def junitJupiterVersion = '5.8.0-M1'
    testImplementation "org.junit.jupiter:junit-jupiter-api:$junitJupiterVersion"
    testImplementation "org.junit.jupiter:junit-jupiter-params:$junitJupiterVersion"
    testRuntimeOnly "org.junit.jupiter:junit-jupiter-engine:$junitJupiterVersion"
    testImplementation "org.testcontainers:testcontainers:1.15.2"
    testImplementation "org.testcontainers:junit-jupiter:1.15.2"
    testImplementation "org.testcontainers:postgresql:1.15.2"

    // Enable use of the JUnitPlatform Runner within the IDE
    testImplementation("org.junit.platform:junit-platform-runner")
}

test {
    useJUnitPlatform() {
        includeEngines 'junit-jupiter'
        excludeEngines 'junit-vintage'
    }
}

version "1.1.0"
sourceCompatibility = 1.9
targetCompatibility = 1.9

// *** Database Tasks *** //

flyway {
    url = 'jdbc:postgresql://localhost:5432/local_parrit'
    user = 'parrit'
    password = 'parrit'
}

task migrate(type: org.flywaydb.gradle.task.FlywayMigrateTask) {
}

// *** LifeCycle Tasks *** //

defaultTasks "clean", "build"

task jsTest(type: Exec) {
    group = "Parrit"
    description = "Runs the frontend javascript tests"

    workingDir = "$project.projectDir/frontend"
    commandLine = "./node_modules/.bin/jest"
}
test.dependsOn(jsTest)

task jsLint(type: Exec) {
    group = "Parrit"
    description = "Checks the javascript code syntax"

    workingDir = "$project.projectDir/frontend"
    commandLine = "./node_modules/.bin/eslint"
    args = ["--config", ".eslintrc.json", "."]
}
jsTest.dependsOn(jsLint)

task jsBuild(type: Exec) {
    group = "Parrit"
    description = "Bundles the frontend javascript code"

    workingDir = "$project.projectDir/frontend"
    commandLine = "./node_modules/.bin/webpack"
    args = ["--config", "webpack.config.js"]
}
processResources.dependsOn(jsBuild)

task jsCompile(type: Exec) {
    group = "Parrit"
    description = "Compiles the frontend typescript"

    workingDir = "$project.projectDir/frontend"
    commandLine = "npm"
    args = ["run", "build"]
}
jsBuild.dependsOn(jsCompile)

task jsDependencies(type: Exec) {
    group = "Parrit"
    description = "Downloads dependencies for the frontend javascript code"

    workingDir = "$project.projectDir/frontend"
    commandLine = "npm"
    args = ["install"]
}
jsBuild.dependsOn(jsDependencies)
